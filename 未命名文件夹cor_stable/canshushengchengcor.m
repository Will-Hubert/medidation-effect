%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 0. 基本设置
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
rng(2018)

n       = 100;
p_comp  = 1000;      % 组合特征（microbes）
p_cov   = 2;         % 协变量 Z1, Z2
p_treat = 1;         % Treatment
p_all   = p_treat + p_cov + p_comp;  % 总变量数 = 1003

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 1. 设置真值向量 gammatrue
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
gammatrue         = zeros(1, p_all);
gammatrue(1)      = 1;    % Treatment
gammatrue(2)      = 1;    % Z1 有效
gammatrue(3)      = 0;    % Z2 无效
microbe_index_raw = [180:20:400, 580:20:800];
microbe_true_idx  = 3 + microbe_index_raw;  % 向后偏移3位
gammatrue(microbe_true_idx) = 1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2. 设置微生物组合成分系数
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
b_comp = zeros(1, p_comp);
b1 = [0.88, -1.39, 1.04, 1.21, -1.86, -1.34, 1.76, -0.99, 0.69, -0.54, 1.35, -0.81];
b2 = [-1.41, -1.15, 0.51, -1.95, 1.93, -0.85, -1.66, 1.48, 1.87, 0.72, 0.67, -0.16];
b_comp(microbe_index_raw(1:2:end)) = b1;
b_comp(microbe_index_raw(2:2:end)) = b2;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 3. 协变量 & Treatment 系数
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
beta_cov   = [2; 0];     % Z1 有效，Z2 无效
beta_treat = 1.5;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 4. 噪声水平
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
sigmaX = ones(1, p_comp);
sigma  = 0.122;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 5. 微生物特征的结构相关矩阵 Xcor
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Xcor = zeros(p_comp);
for i = 180:20:380
    for j = (i+20):20:400
        Xcor(i,j) = 0.75 - 0.0015 * abs(i-j);
    end
end
for i = 580:20:780
    for j = (i+20):20:800
        Xcor(i,j) = 0.75 - 0.0015 * abs(i-j);
    end
end
for i = 445:459
    for j = (i+1):460
        Xcor(i,j) = 0.4 - 0.02 * abs(i-j);
    end
end
for i = 945:959
    for j = (i+1):960
        Xcor(i,j) = 0.4 - 0.02 * abs(i-j);
    end
end
Xcor = Xcor + Xcor' + eye(p_comp);  % 保对称 + 自相关为1

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 6. 设置结构先验 theta
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
theta = zeros(1, p_comp);
theta([180:20:400 580:20:800]) = log(0.5 * p_comp);
theta([45:60 445:460 945:960]) = log(0.25 * p_comp);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 7. 生成组合数据
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[Xorg, beta_comp, epsilon] = gen_comp_simdata_cor( ...
    n, gammatrue(4:end), b_comp, theta, sigmaX, Xcor, sigma);

temp   = exp(2 * Xorg);
Zcomp  = bsxfun(@rdivide, temp, sum(temp, 1));
X_comp = log(Zcomp);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 8. 生成协变量和 Treatment
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Z_extra = randn(n, p_cov);        % Z1, Z2
T       = randi([0, 1], n, 1);    % Treatment 二值

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 9. 构造响应变量 Y
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Y = T * beta_treat + Z_extra * beta_cov + X_comp * beta_comp' + epsilon;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 10. 构造 beta 和 gamma 输出
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
beta_final = [beta_treat; beta_cov; beta_comp(:)];
beta_final = beta_final(:);
gammatrue  = gammatrue(:);

coeffs = table(beta_final, gammatrue, ...
    'VariableNames', {'beta','gammatrue'});

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 11. 构造设计矩阵相关性 corX（p_all x p_all）
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
corX = eye(p_all);

% Treatment 与其他变量无相关性
corX(1, :) = 0;
corX(:, 1) = 0;

% 协变量与微生物之间的相关性为 0.6
for i = 2:3  % Z1 和 Z2
    corX(i, 4:end)   = 0.6;
    corX(4:end, i)   = 0.6;
end

% 微生物内部结构来自 Xcor
corX(4:end, 4:end) = Xcor;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 12. 保存为 .mat 文件
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
beta_all = [beta_treat; beta_cov(:); b_comp(:)];
signal = mean(abs(beta_all(beta_all ~= 0)));
snr    = signal / sigma;

filename = ['structure2_snr' num2str(round(snr)) '_n' num2str(n) '_pnew' num2str(p_comp) '.mat'];
save(filename, ...
    'X_comp', 'Zcomp', 'Z_extra', 'T', 'Xorg', ...
    'Xcor', 'corX', 'theta', ...
    'Y', 'epsilon', ...
    'beta_comp', 'beta_final', 'b_comp', ...
    'gammatrue', 'coeffs', ...
    'signal', 'sigma', 'snr');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 13. 显示信噪比
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
disp(['signal = ', num2str(signal)])
disp(['noise  = ', num2str(sigma)])
disp(['SNR    = ', num2str(snr)])
disp(['Saved to: ', filename])
